---
- name: Ensure ssl folder exist
  file:
    path: "{{ ssl_certs_ca_path }}"
    state: directory
    mode: "{{ ssl_certs_mode }}"

- name: Generate local CA key
  when: amq_ssl_certs_self_signed is defined and amq_ssl_certs_self_signed == False
  openssl_privatekey:
    path: "{{ ssl_certs_ca_privatekey_path }}"
    passphrase: "{{ ssl_certs_ca_passphrase }}"
    cipher: des3
    force: True


- name: Generate a Certificate Sign Request
  when: amq_ssl_certs_self_signed is defined and amq_ssl_certs_self_signed == False
  openssl_csr:
    path: "{{ ssl_certs_ca_csr_path }}"
    mode: "{{ ssl_certs_mode }}"
    privatekey_path: "{{ ssl_certs_ca_privatekey_path }}"
    privatekey_passphrase: "{{ ssl_certs_ca_passphrase }}"
    country_name: "{{ ssl_certs_ca_country }}"
    locality_name: "{{ ssl_certs_ca_locality }}"
    organization_name: "{{ ssl_certs_ca_organization }}"
    organizational_unit_name: "{{ ssl_certs_ca_organizational_unit }}"
    common_name: "{{ ssl_certs_common_name }}"
    email_address: "{{ ssl_certs_email }}"
    subject_alt_name:
    - "DNS:{{ ansible_fqdn }}"
    - "IP:{{ ansible_default_ipv4.address }}"
    force: yes

- name: Generate a self-signed OpenSSL CA certificate
  when: amq_ssl_certs_self_signed is defined and amq_ssl_certs_self_signed == False
  openssl_certificate:
    path: "{{ ssl_certs_ca_cert_path }}"
    privatekey_path: "{{ ssl_certs_ca_privatekey_path }}"
    privatekey_passphrase: "{{ ssl_certs_ca_passphrase }}"
    csr_path: "{{ ssl_certs_ca_csr_path }}"
    provider: selfsigned
    subject:
      C: "{{ ssl_certs_ca_country }}"
      L: "{{ ssl_certs_ca_locality }}"
      O: "{{ ssl_certs_ca_organization }}"
      OU: "{{ ssl_certs_ca_organizational_unit }}"
      CN: "{{ ssl_certs_common_name }}"
    force: yes
