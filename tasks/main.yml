---
  - name: Ensure OpenSSL is installed
    package: name=openssl state=present
    tags: [ssl-certs,packages]
    delegate_to: 127.0.0.1


  - name: Ensure pip dependencies are present
    pip:
      name: "{{ item }}"
      state: latest
      extra_args: --user
    with_items:
      - pyopenssl
      - pexpect
    delegate_to: 127.0.0.1


  - name: Ensure ssl folder exist
    file:
      path: "{{ ssl_certs_path }}"
      state: directory
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
    tags: [ssl-certs,configuration]
    delegate_to: 127.0.0.1

  - include: generate_modules.yml

#  ==== REUSE ====
# Copy key, crt, (?)CA.crt/prm(?)
  - name: Copy SSL private key file (if exists)
    copy:
      src: "{{ ssl_certs_local_privkey_path }}"
      dest: "{{ amq_ssl_key_path }}"
      owner: "{{ ssl_certs_path_owner }}"
      group: "{{ ssl_certs_path_group }}"
      mode: "{{ ssl_certs_mode }}"
      force: "{{ ssl_certs_force_replace }}"

#  - name: Copy SSL certificate file (if exists)
#    copy:
#      src: "{{ ssl_certs_local_cert_path }}"
#      dest: "{{ ssl_certs_cert_path }}"
#      owner: "{{ ssl_certs_path_owner }}"
#      group: "{{ ssl_certs_path_group }}"
#      mode: "{{ ssl_certs_mode }}"
#      force: "{{ ssl_certs_force_replace }}"
#    when: >
#      ( stat_cert.stat.exists )
#      and ( ssl_certs_local_cert_data == '' )
#    tags: [ssl-certs,configuration]




#  - name: Generate strong DHE parameter - https://weakdh.org/
#    command: openssl dhparam -dsaparam -out {{ssl_certs_dhparam_path}} {{ssl_certs_dhparam_size}} creates={{ssl_certs_dhparam_path}}
#    when: ssl_certs_generate_dh_param
#    tags: [ssl-certs,configuration]
#
#  - name: Combine key and cert
#    assemble:
#      dest: "{{ ssl_certs_combined_path }}"
#      src: "{{ ssl_certs_path }}"
#      regexp: "({{ ssl_certs_privkey_path | basename }}|{{ ssl_certs_cert_path | basename }})"
#    tags: [ssl-certs,configuration]
